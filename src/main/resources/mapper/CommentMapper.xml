<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fiee.legaladvice.mapper.CommentMapper">

    <select id="getCommentList" resultType="com.fiee.legaladvice.dto.CommentBackDTO">
        select
        c.id,
        ui1.nickname,
        ui1.avatar,
        ui1.id,
        ui2.nickname as reply_nickname,
        reply_user_id,
        topic_id,
        c.type,
        is_review,
        comment_content,
        a.article_title,
        c.create_time
        from
        tb_comment c
        left join tb_article a on c.topic_id = a.id
        left join tb_user_info ui1 on c.user_id = ui1.id
        left join tb_user_info ui2 on c.reply_user_id = ui2.id
        <where>
            <if test="vo.type != null">
                c.type = #{vo.type}
            </if>
            <if test="vo.isReview != null">
                and c.is_review = #{vo.isReview}
            </if>
            <if test="vo.keywords != null">
                and ui1.nickname like concat('%',#{vo.keywords},'%')
            </if>
        </where>
        ORDER BY
        c.id DESC
        LIMIT #{current},#{size}
    </select>
    <select id="count" resultType="java.lang.Integer">
        select
        count(1)
        from
        tb_comment c
        left join tb_user_info u on c.user_id = u.id
        <where>
            <if test="vo.type != null">
                c.type = #{vo.type}
            </if>
            <if test="vo.isReview != null">
                and c.is_review = #{vo.isReview}
            </if>
            <if test="vo.keywords != null">
                and u.nickname like concat('%',#{vo.keywords},'%')
            </if>
        </where>
    </select>
    <select id="listReplies" resultType="com.fiee.legaladvice.dto.ReplyDTO">
        SELECT
        *
        FROM
        (
        SELECT
        c.user_id,
        u.nickname,
        u.avatar,
        u.web_site,
        c.reply_user_id,
        r.nickname AS reply_nickname,
        r.web_site AS reply_web_site,
        c.id,
        c.parent_id,
        c.comment_content,
        c.create_time,
        row_number () over ( PARTITION BY parent_id ORDER BY create_time ASC ) row_num
        FROM
        tb_comment c
        JOIN tb_user_info u ON c.user_id = u.id
        JOIN tb_user_info r ON c.reply_user_id = r.id
        WHERE
        c.is_review = 1
        AND
        parent_id IN
        (
        <foreach collection="commentIdList" item="commentId" separator=",">
            #{commentId}
        </foreach>
        )
        ) t
        WHERE
        4 > row_num
    </select>

    <select id="listReplyCountByCommentId" resultType="com.fiee.legaladvice.dto.ReplyCountDTO">
        SELECT
        parent_id as comment_id,
        count(1) AS reply_count
        FROM
        tb_comment
        WHERE
        is_review = 1
        AND
        parent_id IN
        <foreach open="(" collection="commentIdList" item="commentId" separator="," close=")">
            #{commentId}
        </foreach>
        GROUP BY
        parent_id
    </select>

    <select id="listRepliesByCommentId" resultType="com.fiee.legaladvice.dto.ReplyDTO">
        SELECT
            c.user_id,
            u.nickname,
            u.avatar,
            u.web_site,
            c.reply_user_id,
            r.nickname as reply_nickname,
            r.web_site as reply_web_site,
            c.id,
            c.parent_id,
            c.comment_content,
            c.create_time
        FROM
            tb_comment c
                JOIN tb_user_info u ON c.user_id = u.id
                JOIN tb_user_info r ON c.reply_user_id = r.id
        WHERE
            c.is_review = 1
          AND
            parent_id =#{commentId}
        ORDER BY
            c.id ASC
            LIMIT #{current}, #{size}
    </select>
</mapper>
